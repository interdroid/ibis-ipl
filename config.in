# -------------- start of user configuration -----------------------------

# When using javac or jikes, set these values correctly and use "make"
# or "make java". (Also make sure that your CLASSPATH is set correctly).     

.PHONY:		manta
.PHONY:		java

# default:	manta
default:	java

PROFILE		= 0
OPTIMIZE	= 1

MYRINET_ROOT    = /usr/local/package/myrinet/lib/intel_linux
GM_ROOT		= /usr/gm

# -------------- end of user configuration -----------------------------

PANDA		= @PANDA_ROOT@
PANDA_NETWORK	= @PANDA_NETWORK@
DAS		= @DAS_LIB@
JPATH           = @JAVA_ROOT@
JAVAC           = @JAVAC@
JIKES_BT	= @JIKES_BT_ROOT@
JAD		= /home3/rob/bin/jad
ifndef IBIS_ROOT
IBIS_ROOT	= @IBIS_ROOT@
endif
LFC_ROOT	= @LFC_ROOT@

JAVAC_COMMAND   = $(JAVAC) $(JAVACFLAGS) $(JAVAOPTFLAGS)
JAVAH_COMMAND   = $(JPATH)/bin/javah $(JAVAHFLAGS)
JAVACLASSPATH	= $(IBIS_ROOT):$(IBIS_ROOT)/ibis:.:$(JPATH)/jre/lib/rt.jar:$(JIKES_BT)/jikesBT
JAVACFLAGS	+= -classpath $(JAVACLASSPATH)
JAVAHFLAGS      += -classpath $(JAVACLASSPATH)
CLASSPATH	= $(JAVACLASSPATH)
export CLASSPATH

LD_LIBRARY_PATH	= $(IBIS_ROOT)/ibis/ipl/impl/messagePassing
export LD_LIBRARY_PATH

IBERTY	        = $(MYRINET_ROOT)/libiberty.a
BFD		= $(MYRINET_ROOT)/libbfd.a
LANAIDEVICE	= $(MYRINET_ROOT)/libLanaiDevice.a
DPI		= $(MYRINET_ROOT)/libDpi.a
ENS		= /usr/proj/FastSockets/enameserver/enameserver-0.13/libens.a
ifeq ($(OPTIMIZE), 1)
LFC	        = $(LFC_ROOT)/lib/optimized/liblfc.a
PANDA_LIB	= $(PANDA)/panda4.0/lib/i386_linux/$(PANDA_NETWORK)/no_threads/optimized/libpanda.a
else
LFC	        = $(LFC_ROOT)/lib/debug/liblfc.a
PANDA_LIB	= $(PANDA)/panda4.0/lib/i386_linux/$(PANDA_NETWORK)/no_threads/libpanda.a
endif
GM		= $(GM_ROOT)/lib/libgm.a

GROUPC_COMMAND = $(JPATH)/bin/java -classpath $(JAVACLASSPATH) ibis.frontend.group.Main

GROUP_FILES = $(SRC:%.java=%.gjava)
CLASS_FILES = $(SRC:%.java=%.class)
MAIN_CLASS = $(MAIN:%.java=%.class)
MAIN_CLASS_NAME = $(MAIN:%.java=%)

LDSO	= gcc -shared

SATINC_COMMAND = $(JPATH)/bin/java -classpath $(JAVACLASSPATH) ibis.frontend.satin.Satinc -keep -compiler "$(JAVAC) -classpath $(JAVACLASSPATH)"

IOC_COMMAND = $(JPATH)/bin/java -classpath $(JAVACLASSPATH) ibis.frontend.io.IOGenerator

# When using Manta, set these values correctly and use "make manta"

ifeq (, $(PANDA_NETWORK))
PANDA_NETWORK	= udp
endif

CFLAGS		=
MANTACFLAGS	=

ifeq ($(OPTIMIZE), 1)
CFLAGS		+= -O3 -DNDEBUG
else
MANTACFLAGS	+= -no-opt-comm
endif
ifeq ($(PROFILE), 1)
CFLAGS		+= -pg
# CFLAGS		+= -fno-inline-functions
MANTACFLAGS	+= -pg
endif

ifeq (,$(PACKAGE))
PACKAGEDOT	:= ""
else
PACKAGEDOT	:= $(PACKAGE).
PACKAGE_SLASH	:= $(subst .,/,$(PACKAGE))
PACKAGE_MANGLE	:= $(subst .,_,$(PACKAGE))
endif

MANTA	= @MANTA_ROOT@
export MANTA
MANTACLASSPATH	= $(IBIS_ROOT):$(IBIS_ROOT)/ibis:$(MANTA)/javalibs:.
MANTACFLAGS	+= -classpath $(MANTACLASSPATH)
MANTACFLAGS	+= -g
MANTACFLAGS	+= -no-shared-link
MANTACFLAGS	+= -panda $(PANDA)/panda4.0
ifeq (lfc, $(PANDA_NETWORK))
MANTACFLAGS	+= -myrinet
endif
MANTAC_COMMAND = $(MANTA)/mantac $(MANTACFLAGS)

SRC		+= $(REMOTE)

O_FILES		:= $(SRC:%.java=%.o)

DEPENDENCIES	:= ibis.depend.Serializable
GENERATE_PACKAGERS	= 1
ifeq (ibis.ipl.impl.tcp,$(PACKAGE))
GENERATE_PACKAGERS	= 0
endif
# ifeq (ibis.ipl.impl.messagePassing,$(PACKAGE))
# GENERATE_PACKAGERS	= 0
# endif
ifeq (ibis.satin,$(PACKAGE))
GENERATE_PACKAGERS	= 0
endif
ifeq (,$(SRC))
GENERATE_PACKAGERS	= 0
endif
ifeq (1, $(GENERATE_PACKAGERS))
SERIALIZABLE_J  := $(shell $(JAVAC_COMMAND) +B +DR=$(DEPENDENCIES) $(MAIN) $(SRC); $(IBIS_ROOT)/ibis/bin/filter_Serializable < $(DEPENDENCIES))
SERIALIZABLE_O	:= $(SERIALIZABLE_J:%.java=%.o)
SERIALIZABLE_JAD	:= $(SERIALIZABLE_J:%.java=%.jad) $(SERIALIZABLE_J:%.java=%_ibis_io_Generator.jad)
SERIALIZABLE_JAD_O	:= $(SERIALIZABLE_J:%.java=%.o) $(SERIALIZABLE_J:%.java=%_ibis_io_Generator.o)
O_FILES		:= $(filter-out $(SERIALIZABLE_O), $(O_FILES))
O_FILES		:= $(O_FILES) $(SERIALIZABLE_JAD_O)

SERIALIZABLE_CLASS	:= $(SERIALIZABLE_J:%.java=%.class)
endif

PKG_SUF		:= .$(PACKAGE_MANGLE)
PKG_O_FILES	:= $(O_FILES:%.o=%$(PKG_SUF))

MANTA_LIB	= $(IBIS_ROOT)/ibis/ipl/libibis.a
MANTA_SO	= $(MANTA_LIB:%.a=%.so)

JACKAL_PATCHERS	=
JACKAL_PATCHERS	+= $(SRC:%.java=diff_patch_%.c)
JACKAL_PATCHERS	+= $(MAIN:%.java=diff_patch_%.c)
JACKAL_PATCHERS	+= $(SERIALIZE_J:%.java=diff_patch_%.c)
JACKAL_PATCHERS	+= $(SERIALIZABLE_JAD:%.jad=diff_patch_%_jad.c)

TRASH_FILES=*core *.o stub_*.h packagers_*.c packagers_*.h *.jac *~ *.s $(OUT) *.class *.lasm *.d Satin_*_InvocationRecord.java Satin_*_ReturnRecord.java -r LASM_CACHE $(O_FILES) $(PKG_O_FILES) $(JACKAL_PATCHERS) Satin_*

TRASH_FILES	+= $(SERIALIZABLE_JAD)
TRASH_FILES	+= $(SERIALIZABLE_JAD:%.jad=%_jad.java)
# TRASH_FILES	+= $(SERIALIZABLE_JAD:%.jad=%_ibis_io_Generator.java)
TRASH_FILES	+= $(SERIALIZABLE_JAD_O)
TRASH_FILES	+= $(DEPENDENCIES)


#conversion rules

.SUFFIXES:
.SUFFIXES:      .o .S .java .satin .class .c $(PKG_SUF) .jad _ibis_io_Generator.java

.java.o:
	$(MANTAC_COMMAND) -c $*.java

.java.S:
	$(MANTAC_COMMAND) -S $*.java

.java_ibis_io_Generator.java:
	$(JAVAC_COMMAND) $*.java
ifeq (ibis.,$(findstring ibis., $(PACKAGE)))
	cd $(IBIS_ROOT); $(IOC_COMMAND) $(PACKAGEDOT)$*
else
	$(IOC_COMMAND) $(PACKAGEDOT)$*
endif
	$(JAD) -f $*.class
	if [ ! -e $*.java.backup ] ; \
		then if grep -q 'Decompiled by Jad' $*.java; \
			then : ; \
			else cp $*.java $*.java.backup ; \
		fi ; \
	fi
	mv $*.jad $*.java
	$(JAD) -f $*_ibis_io_Generator.class
	mv $*_ibis_io_Generator.jad $*_ibis_io_Generator.java

rmi_stub_%.java:	%.class
	$(JPATH)/bin/java -classpath $(CLASSPATH) ibis.frontend.rmi.Main -v $*

rmi_skeleton_%.java:	%.class
	$(JPATH)/bin/java -classpath $(CLASSPATH) ibis.frontend.rmi.Main -v $*

.o$(PKG_SUF):
	cp $*.o $@

.java.class:
	$(JAVAC_COMMAND) $*.java
ifneq ($(SERIALIZABLE_CLASS), $(filter-out $*.class, $(SERIALIZABLE_CLASS)))
ifeq (ibis.,$(findstring ibis., $(PACKAGE)))
	cd $(IBIS_ROOT); $(IOC_COMMAND) $(PACKAGEDOT)$*
else
	$(IOC_COMMAND) $(PACKAGEDOT)$*
endif
endif

ifneq (, $(OUT))
manta:
	$(MAKE) $(MFLAGS) src
ifeq (1, $(GENERATE_PACKAGERS))
	$(MAKE) $(MFLAGS) serializers
endif
	$(MAKE) $(MFLAGS) $(O_FILES)
	$(MAKE) $(MFLAGS) $(OUT)
endif

ifeq (1, $(GENERATE_PACKAGERS))
.PHONY: serializers
serializers:	$(DEPENDENCIES) $(SERIALIZABLE_J:%.java=%_ibis_io_Generator.java) $(REMOTE:%.java=rmi_stub_%.java) $(REMOTE:%.java=rmi_skeleton_%.java)
endif

$(OUT): $(MAIN) $(O_FILES)
	$(MANTAC_COMMAND) -o $@ $(MAIN) $(O_FILES) $(MANTA_LIB)

.PHONY: src
src:	$(SRC) $(REMOTE) $(MAIN)

.PHONY:	run
run:
	$(JPATH)/bin/java $(JAVACFLAGS) $(MAIN:%.java=%)

.PHONY:	prun
prun:
	@echo "prun IBP_SEND_SYNC=100 LD_LIBRARY_PATH=$(LD_LIBRARY_PATH):. MANTA_NO_PANDA=1 PAN_COMM_NO_INTR=1 CLASSPATH=$(CLASSPATH) -no-panda $(JPATH)/bin/java 'hosts' $(JAVACFLAGS) $(MAIN:%.java=%) 'args ...'"
