    <!--
	Properties to be shared by all files, apps in Ibis

	Requires prior definition of the following properties:

	    ibis          the root of the Ibis tree

	Optional prior property definition:

	    build         the root of the build tree


	Specify in this file:

	    package.home.ant-cpptasks	root of ant-cpptasks
	    package.home.ant-contrib	root of ant-contrib
	    package.home.bcel		root of bcel

	    property optimization is one of
		optimize
		debug

	    property c.compiler is one of the list in cpp-tasks cc.
	    Suggestions:
		gcc			if unix
		msvc			if windows
    -->

    <property file="${ibis}/build-properties"/>

    <property environment="env"/>
    <property name="JAVA_HOME"    value="${env.JAVA_HOME}"/>


    <!--
	Choose a value from
	    debug
	    optimize
    -->
    <property name="optimization" value="optimize"/>



    <!--
	Defines shared by the whole build
    -->


    <target name="contrib-init" unless="contrib.initialized">
	<echo level="verbose"
		message="ant-contrib home is ${package.home.ant-contrib}"/>
	<taskdef resource="net/sf/antcontrib/antcontrib.properties">
	    <classpath>
		<pathelement location="${package.home.ant-contrib}/ant-contrib-0.3.jar"/>
	    </classpath>
	</taskdef>
	<property name="contrib.initialized" value="true"/>
    </target>


    <target name="proprietry-tasks">
	<mkdir dir="${ibis}/ant-tasks/tasks"/>
	<javac
		srcdir="${ibis}/ant-tasks"
		destdir="${ibis}/ant-tasks/tasks">
	    <include name="**/*.java"/>
	    <classpath refid="default.classpath"/>
	</javac>
	<taskdef
		name="maplibrary"
		classname="MapLibraryName"
		classpath="${ibis}/ant-tasks/tasks"/>
    </target>

    <target name="property-init" depends="contrib-init,proprietry-tasks">
	<!--
	    Find the switches that indicate debug/optimize
	-->
	<condition property="native.debug">
	    <equals arg1="${optimization}" arg2="debug"/>
	</condition>
	<condition property="native.optimize">
	    <equals arg1="${optimization}" arg2="optimize"/>
	</condition>
	<condition property="java.debug">
	    <equals arg1="${optimization}" arg2="debug"/>
	</condition>
	<condition property="java.optimize">
	    <equals arg1="${optimization}" arg2="optimize"/>
	</condition>

	<condition property="java.debug.value"   value="true">
	    <isset property="java.debug"/>
	</condition>
	<condition property="java.debug.value"   value="false">
	    <not>
		<isset property="java.debug"/>
	    </not>
	</condition>
	<condition property="native.debug.value" value="true">
	    <isset property="native.debug"/>
	</condition>
	<condition property="native.debug.value" value="false">
	    <not>
		<isset property="native.debug"/>
	    </not>
	</condition>

	<!--
	    Choose the C compiler of your liking.
	    Override if you are not content with the default.
	-->
	<if>
	    <os family="unix"/>
	    <then>
		<property name="c.compiler" value="gcc"/>
		<property name="optimize.arg" value="-O3"/>
	    </then>
	<elseif>
	    <os family="windows"/>
	    <then>
		<property name="c.compiler" value="bcc"/>
		<property name="optimize.arg" value="-O2"/>
	    </then>
	</elseif>
	<elseif>
	    <os family="mac"/>
	    <then>
		<property name="c.compiler" value="gcc"/>
		<property name="optimize.arg" value="-O3"/>
	    </then>
	</elseif>
	</if>
    </target>

    <property name="ibisBuild"   location="${ibis}/build"/>

    <path id="default.classpath">
	<pathelement path="${ibisBuild}"/>
	<pathelement path="${build}"/>
	<pathelement path="${package.home.bcel-additions}"/>
	<pathelement path="${package.home.bcel}/bcel-5.1.jar"/>
    </path>


    <target name="run">
	<property name="IBIS" value="panda"/>
	<property name="SER"  value="ibis"/>
	<exec outputproperty="hostname" executable="hostname"/>
	<echo message="My hostname is ${hostname}"/>
	<if>
	    <equals arg1="${hostname}" arg2="athlon-win2000"/>
	    <then>
		<property name="host.number" value="0"/>
	    </then>
	<elseif>
	    <equals arg1="${hostname}" arg2="p3"/>
	    <then>
		<property name="host.number" value="1"/>
	    </then>
	</elseif>
	</if>
	<java
		fork="true"
		classname="${MAIN}"
		classpath="build:${ibis}/build">
	    <sysproperty key="java.library.path"      value="${ibis}/build/lib"/>
	    <sysproperty key="ibis.name_server.host"  value="athlon-win2000"/>
	    <sysproperty key="ibis.name_server.port"  value="7654"/>
	    <sysproperty key="ibis.name_server.key"   value="rutger.0001"/>
	    <sysproperty key="ibis.pool.host_number"  value="${host.number}"/>
	    <sysproperty key="ibis.pool.total_hosts"  value="2"/>
	    <sysproperty key="ibis.pool.host_names"   value="athlon-win2000 p3"/>
	    <sysproperty key="ibis.name"              value="${IBIS}"/>
	    <sysproperty key="ibis.serialization"     value="${SER}"/>
	    <arg line="${ARGS}"/>
	</java>
    </target>
