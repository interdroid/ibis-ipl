<project
    name="rmi-app"
    default="build"
    basedir=".">

    <import file="${ibis}/build-files/build-properties.xml"/>
    <import file="${ibis}/build-files/build-iogen.xml"/>
    <import file="${ibis}/build-files/apps/build-run.xml"/>

    <description>
	Ibis rmi application build.
    </description>

    <target name="property-rmic-build" unless="build">
	<echo message="build is undefined. Set it to the default value"/>
	<property name="build" value="build"/>
    </target>

    <property name="builddir" location="${build}"/>

    <target name="set-to-rmic-flags" if="rmic-flags">
	<property name="rmic-flags.value" value="${rmic-flags}"/>
    </target>

    <target name="set-def-rmic-flags" unless="rmic-flags">
	<property name="rmic-flags.value" value=""/>
    </target>

    <target name="set-rmic-flags"
	depends="set-to-rmic-flags,set-def-rmic-flags"/>

    <target name="rmic-init"
	    depends="property-rmic-build,property-init"/>

    <target name="rmic"
	    depends="rmic-init,set-rmic-flags">
	    <!-- Commented out; not toplevel.
	    description="Preprocess class files in the build tree for RMI"
	    -->
	<!-- <echo message="Do ONLY the class files in ibis/ipl"/> -->

	<path id="all-classes">
	    <fileset dir="${builddir}">
		<include name="**/*.class"/>
		<include name="ibis/ipl/*.class"/>
	    </fileset>
	</path>
	<pathconvert pathsep=" " property="classes.all" refid="all-classes">
	    <map from="${builddir}${file.separator}" to=""/>
	</pathconvert>

	<echo message="${classes.all}" file="${build}/RMIC-Classes"/>
	<replace file="${build}/RMIC-Classes" token=".class" value=""/>
	<replace file="${build}/RMIC-Classes" token="${file.separator}" value="."/>
	<loadfile
		property="rmic-classes"
		srcFile="${build}/RMIC-Classes">
	</loadfile>

	<echo	level="debug"
		message="All classes to be rewritten: ${rmic-classes}"/>
	<echo	level="debug"
		message="Run ibis rmic over all classes under ${builddir}${file.separator}"/>
	<java   classname="ibis.frontend.rmi.Main"
		taskname="ibis rmic"
		dir="${builddir}"
		failonerror="true"
		fork="true">
		<arg line="${rmic-flags.value} -dir -java2ibis ${rmic-classes}"/>
	    <classpath refid="default.classpath"/>
	</java>
	<javac	destdir="${builddir}"
		srcdir="${builddir}">
	    <include name="**/rmi_stub_*.java"/>
	    <include name="**/rmi_skeleton_*.java"/>
	    <classpath refid="default.classpath"/>
	</javac>
    </target>

    <target name="rmic-sun"
	    depends="property-init">
	    <!-- Commented out; not toplevel.
	    description="Preprocess class files in the build tree for SUN RMI"
	    -->

	<path id="all-classes">
	    <fileset dir="${builddir}">
		<include name="**/*.class"/>
	    </fileset>
	</path>
	<pathconvert pathsep=" " property="classes.all" refid="all-classes">
	    <map from="${builddir}${file.separator}" to=""/>
	</pathconvert>

	<echo message="${classes.all}" file="${build}/-RMIC-Classes"/>
	<replace file="${build}/-RMIC-Classes" token=".class" value=""/>
	<replace file="${build}/-RMIC-Classes" token="${file.separator}" value="."/>
	<loadfile
		property="rmic-classes"
		srcFile="${build}/-RMIC-Classes">
	</loadfile>

	<echo   level="debug"
		message="All classes to be inspected: ${rmic-classes}"/>
	<echo   level="debug"
		message="Run frontend.rmi.Main -n -java over all classes under ${builddir}${file.separator}"/>
	<java   classname="ibis.frontend.rmi.Main"
		taskname="rmic locator"
		dir="${builddir}"
		failonerror="true"
		fork="true"
		output="${build}/-REMOTE-Classes">
	    <arg line="-n -java ${rmic-classes}"/>
	    <classpath refid="default.classpath"/>
	</java>
	<loadfile
		property="remote.classes"
		srcFile="${build}/-REMOTE-Classes"/>
	<echo   level="debug"
		message="Now run sun.rmic over '${remote.classes}'"/>
	<rmic   base="${builddir}"
		includes="${remote.classes}">
	    <classpath refid="default.classpath"/>
	</rmic>
    </target>


    <target name="init" depends="property-init">
	<tstamp/>
	<mkdir dir="${builddir}"/>
	<!--
	<echo message="os.name = ${os.name} os.arch = ${os.arch}"/>
	<echo message="user.name = ${user.name} user.dir = ${user.dir}"/>
	<echo message="java.ext.dirs = ${java.ext.dirs}"/>
	-->
    </target>

    <target name="compile"
	depends="clean,init,property-init">
	<property name="class-path" refid="default.classpath"/>
	<echo   message="class path ${class-path}"/>

	<javac  destdir="${builddir}"
		debug="true"
		srcdir=".:${ibis}/apps/rmi/shared">
	    <classpath refid="default.classpath"/>
	    <include name="**/*.java"/>
	</javac>
    </target>

    <target name="build"
	    depends="init"
	    description="Compile RMI application for Ibis RMI">
	<antcall inheritAll="true" inheritRefs="true" target="compile"/>
	<antcall inheritRefs="true" target="rmic"/>
	<antcall inheritRefs="true" target="iogen"/>
    </target>

    <target name="build-sun"
	    depends="init"
	    description="Compile RMI application for Sun RMI">
	<antcall inheritAll="true" inheritRefs="true" target="compile"/>
	<antcall inheritRefs="true" target="rmic-sun"/>
    </target>

    <target name="clean"
	    description="Clean up the build">
	<delete dir="${build}"/>
    </target>

</project>
