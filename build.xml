<project
    name="ibis"
    default="default"
    basedir=".">

    <description>
	Top-level Ibis build.
    </description>

    <target name="default"
	    description="Build Ibis, only native code if explicitly configured"
	    depends="allclean,build,natives-if-configured">
	<delete dir="${build}"/>
    </target>

    <target name="all"
	    description="Build everything, including native code"
	    depends="allclean,build,natives">
	<delete dir="${build}"/>
    </target>

    <target name="usage"
	    description="Print this message">
	<exec	executable="ant">
	    <arg line="-projecthelp"/>
	</exec>
	<echo message="os.name ${os.name} os.arch ${os.arch}"/>
    </target>

    <property name="ibis"        location="."/>

    <property name="ibis-major" value="1"/>
    <property name="ibis-minor" value="3"/>

    <property name="ibis-version" value="ibis-${ibis-major}.${ibis-minor}"/>

    <!--
	This must come first.
    -->
    <import file="${ibis}/build-files/build-config.xml"/>

    <target name="make-dirs">
	<tstamp/>
	<mkdir dir="${build}"/>
	<mkdir dir="${ibis}/lib"/>
	<mkdir dir="${ibis}/bin"/>
    </target>

    <target name="init" depends="config-init-initial,property-init,make-dirs"/>

    <!--
	Compile only
    -->
    <target name="compile"
	    depends="init,bcel">
	<javac  destdir="${build}" debug="true" srcdir="${src}"
	    includes="ibis/**/*.java"
	    excludes="ibis/impl/net/nio/**/*.java,ibis/repmi/**/*.java">
	    <classpath refid="default.classpath"/>
	</javac>
    </target>

    <target name="check-windows" unless="bin-created">
	<condition property="is-windows">
	    <os family="windows"/>
	</condition>
    </target>

    <target name="build-unix-bin" unless="bin-created">
    <!--
	    Commented out so that unix scripts get installed on Cygwin
	    (and on windows, but who cares ...)
	    unless="is-windows">
    -->
	<copy todir="${ibis}/bin">
	    <fileset dir="${ibis}/src/scripts" excludes="*.bat,*.in"/>
	</copy>
    </target>

    <target name="build-windows-bin" unless="bin-created" if="is-windows">
	<copy todir="${ibis}/bin">
	    <fileset dir="${ibis}/src/scripts" includes="*.bat"/>
	</copy>
    </target>

    <target name="build-bin"
	    depends="check-windows, build-unix-bin, build-windows-bin">
	<chmod file="${ibis}/bin/*" perm="+x"/>
	<property name="bin-created" value="true"/>
    </target>

    <!--
	Compile, run IOGenerator, build jars for the whole of Ibis
    -->

    <target name="build"
	    depends="compile, build-bin, copyProperties, iogen, jars"
	    description="Build Ibis">
	<property file="${ibis}/build-properties"/>
    </target>

    <import file="${ibis}/build-files/build-properties.xml"/>

    <property name="src"         location="${ibis}/src"/>
    <property name="build"       location="${ibis}/build"/>
    <property name="lib"         location="${ibis}/lib"/>
    <property name="docs"        location="${ibis}/docs"/>

    <!--
	We depend on bcel. I am not sure it should be inside Ibis,
	but there it is, so I include it in build.xml.
    -->
    <target name="bcel" depends="init">
	<javac  destdir="${build}"
		srcdir="${ibis}/src">
	    <include name="org/**/*.java"/>
	    <classpath refid="default.classpath"/>
	</javac>
    </target>

    <import file="${ibis}/build-files/build-iogen.xml"/>
    <import file="${ibis}/build-files/build-native.xml"/>

    <!--
	Compile the native code in all directories that have native code
    -->

    <target name="natives.misc" depends="property-init">
	<ant inheritRefs="false" inheritAll="false" dir="${ibis}/src/ibis/io">
	    <property name="build" value="${build}"/>
	</ant>
	<ant inheritRefs="false" inheritAll="false" dir="${ibis}/3rdparty/omni/OmniTimer">
	    <property name="build" value="${build}"/>
	</ant>
	<ant inheritRefs="false" inheritAll="false" dir="${ibis}/src/ibis/util/nativeCode">
	    <property name="build" value="${build}"/>
	</ant>
    </target>

    <target name="natives.net" depends="property-init" if="gm.present">
	<ant inheritRefs="false" inheritAll="false" dir="${ibis}/src/ibis/impl/net/gm">
	    <property name="build" value="${build}"/>
	</ant>
    </target>

    <target name="natives.mp" depends="property-init" if="panda.present">
	<ant inheritRefs="false" inheritAll="false" dir="${ibis}/src/ibis/impl/messagePassing">
	    <property name="build" value="${build}"/>
	</ant>
	<ant inheritRefs="false" inheritAll="false" dir="${ibis}/src/ibis/impl/messagePassing/panda">
	    <property name="build" value="${build}"/>
	</ant>
	<!--
	<ant inheritRefs="false" inheritAll="false" dir="${ibis}/src/ibis/impl/messagePassing/mpi">
	    <property name="build" value="${build}"/>
	</ant>
	-->
    </target>

    <target name="natives-if-configured" if="ibis.configured">
	<antcall target="natives"/>
    </target>

    <target name="natives"
	    depends="javah,
		     proprietary-tasks,
		     natives.misc,
	    	     natives.mp,
		     natives.net">
	<delete>
	    <fileset dir="${lib}/natives">
		<include name="**/*.o"/>
	    </fileset>
	</delete>
     </target>

    <target name="copyProperties"
	    depends="init"
	    description="Copy property files to the build tree">
	<copy todir="${build}">
	    <fileset dir="${src}">
		<include name="ibis/impl/**/properties"/>
	    </fileset>
	</copy>
	<copy todir="${build}">
	    <fileset dir="${ibis}">
		<include name="ibis-sys-props"/>
		<include name="ibis-properties"/>
		<include name="properties"/>
	    </fileset>
	</copy>
    </target>

    <target name="jars"
	    depends="ibis.jar"
	    description="Generate jar files for ibis">
    </target>

    <target name="ibis.jar">
	<jar	destfile="${ibis}/lib/ibis.jar"
		basedir="${build}"
		includes="**/*.class **/properties properties ibis-properties ibis-sys-props"/>
    </target>

    <!--
	Run IOGenerator over the classlibs in $JAVA_HOME and
	put them into ${rewritten-classlibs}
    -->

    <property name="rewritten-classlibs" location="${ibis}/classlibs"/>

    <target name="rewrite"
	    depends="init"
	    description="Preprocess all serializable classes of standard Java">
	<!-- Create a directory for the rewritten classes -->

	<mkdir dir="${rewritten-classlibs}"/>

	<!-- Then, find and extract jars.  -->
	<unjar dest="${rewritten-classlibs}">
	    <patternset>
		<include name="**/*.class"/>
	    </patternset>
	    <fileset dir="${JAVA_HOME}/jre/lib">
		<include name="**/*.jar"/>
	    </fileset>
	</unjar>

	<!-- Then, rewrite.  -->
	<antcall inheritRefs="true" target="iogen">
	    <param name="iogen-build" value="${rewritten-classlibs}"/>
	</antcall>
    </target>

    <target name="clean"
	    description="Clean up the build">
	<delete dir="${ibis}/build"/>
    </target>

    <target name="allclean"
	depends="clean"
	description="Clean up build, jars, native">
	<!-- No, not bin: otherwise ns-env will disappear and never
	     reappear. Note that ns-env should survive builds.
	     Maybe put ns-env somewhere else???
	<delete dir="${ibis}/bin"/>
	-->
	<delete dir="${ibis}/lib"/>
    </target>

    <target name="rewritten-clean"
	    description="Clean up rewritten classlibs (except under sym links)">
	<!--
	    If ${rewritten-classlibs} is a sym-link, we let the directory
	    live on. In this case, I suppose the user knows what he is up to.
	    If it isn't a symlink (which is the normal case) go ahead and
	    throw away all your rewritten stuff.	RFHH
	-->
	<delete includeEmptyDirs="true">
	    <fileset dir="${ibis}" followsymlinks="false">
		<include name="classlibs/**"/>
	    </fileset>
	</delete>
    </target>

    <target name="distclean"
	    depends="clean,rewritten-clean"
	    description="Clean up, also configuration cache and rewritten classlibs">
	<delete file="build-properties"/>
	<delete file="build-properties.cache"/>
	<delete file="build-properties.backup"/>
	<ant dir="${ibis}/apps" inheritAll="false" target="clean">
	    <property name="ibis" value="${ibis}"/>
	</ant>
	<ant dir="${ibis}/ibis-example" inheritAll="false" target="clean"/>
	<delete dir="bin"/>
	<delete dir="ant-tasks/tasks"/>
	<ant dir="${docs}" inheritAll="false" target="distclean"/>
	<delete file="configuration.sh"/>
	<delete file="configuration.bat"/>
    </target>

    <target name="docs"
	    description="Build the Ibis API documentation">
	<ant dir="${docs}" inheritAll="false" target="api"/>
    </target>

    <target name="developer-docs">
	<ant dir="${docs}" inheritAll="false" target="developer-api"/>
    </target>

    <target name="progman"
	    description="Build the Ibis programmers manual">
	<ant dir="${docs}" inheritAll="false" target="progman"/>
    </target>

    <target name="simple-test" depends="build">
	<ant dir="ibis-example" inheritAll="false" target="test"/>
    </target>

    <target name="test" depends="simple-test">
	<ant dir="apps" inheritAll="false" target="test">
	    <property name="ibis" value="${ibis}"/>
	</ant>
    </target>
</project>
