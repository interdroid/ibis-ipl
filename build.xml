<!DOCTYPE project [
    <!ENTITY sharedProperties SYSTEM "build-properties.xml">
    <!ENTITY iogenTargets     SYSTEM "build-iogen.xml">
    <!ENTITY nativeTargets    SYSTEM "build-native.xml">
]>

<project
    name="ibis"
    default="build"
    basedir=".">

    <description>
	Top-level Ibis build.
    </description>

    <property name="ibis"        location="."/>

    &sharedProperties;

    <property name="src"         location="${ibis}/.."/>
    <property name="build"       location="${ibis}/build"/>

    <target name="init" depends="property-init">
	<tstamp/>
	<echo message="packages:"/>
	<echo message="package.home.bcel      = ${package.home.bcel}"/>
	<echo message="package.home.bcel-additions = ${package.home.bcel-additions}"/>
	<echo message="package.home.ant-contrib    = ${package.home.ant-contrib}"/>
	<echo message="package.home.ant-cpptasks   = ${package.home.ant-cpptasks}"/>
	<mkdir dir="${build}"/>
	<copy
		file="${ibis}/ipl/InstallConfiguration.java.in"
		tofile="${ibis}/ipl/InstallConfiguration.java">
	    <filterchain>
		<filterreader
			classname="org.apache.tools.ant.filters.ReplaceTokens">
		    <param  type="token"
			    name="IBIS_INSTALL_PATH"
			    value='"${ibis}"'/>
		</filterreader>
	    </filterchain>
	</copy>
    </target>


    <!--
	We depend on bcel. I am not sure it should be inside Ibis,
	but there it is, so I include it in build.xml.
    -->
    <target name="bcel" depends="init">
	<javac  destdir="${build}"
		srcdir="${package.home.bcel-additions}">
	    <include name="**/*.java"/>
	    <classpath refid="default.classpath"/>
	</javac>
    </target>


    <!--
	The list of directories that contain native sources.
    -->
    <path id="native.src.dirs">
	<pathelement path="${ibis}/io"/>
	<pathelement path="${ibis}/ipl/impl/messagePassing"/>
	<pathelement path="${ibis}/ipl/impl/messagePassing/panda"/>
	<pathelement path="${ibis}/ipl/impl/messagePassing/mpi"/>
	<pathelement path="${ibis}/ipl/impl/net/gm"/>
	<pathelement path="${ibis}/util/nativeCode"/>
	<!--
	-->
    </path>

    <property name="native.src.path" refid="native.src.dirs"/>


    &iogenTargets;


    <target name="src-file-init" depends="init">
	<path id="src.files.id">
	    <fileset dir="${ibis}/..">
		<include name="ibis/frontend/**/*.java"/>
		<include name="ibis/group/**/*.java"/>
		<include name="ibis/io/**/*.java"/>

		<include name="ibis/ipl/**/*.java"/>
		<exclude name="ibis/ipl/impl/net/nio/**/*.java"/>
		<!--
		<exclude name="ibis/ipl/impl/net/gm/**/*.java"/>
		-->
		<exclude name="ibis/ipl/impl/net/muxer/tcp_blk/**/*.java"/>
		<exclude name="ibis/ipl/impl/messagePassing/panda/**/*.java"/>

		<include name="ibis/satin/**/*.java"/>
		<include name="ibis/classfile/**/*.java"/>
		<include name="ibis/rmi/**/*.java"/>
		<include name="ibis/util/**/*.java"/>
	    </fileset>
	</path>
	<property name="src.path.files" refid="src.files.id"/>
	<echo message="${src.path.files}" file="${build}/source-files"/>
	<replace file="${build}/source-files" token="${src}${file.separator}" value=""/>
	<replace file="${build}/source-files" token="${path.separator}" value=","/>
	<loadfile srcFile="${build}/source-files" property="src.files"/>
    </target>


    <target name="depend">
	<depend
		srcDir="${src}"
		destDir="${build}"
		cache="${build}/depCache"
		classpath="${src}"
		dump="true"
		>
		<!-- closure="yes" -->
	    <include name="ibis/**/*.java"/>
	    <exclude name="${package.home.ant-contrib}/**/*.java"/>
	    <exclude name="${package.home.ant-cpptasks}/**/*.java"/>
	    <!--
	    <include name="${src.files}"/>
	    -->
	</depend>
    </target>


    <!--
	Contains the list of directories where we want to compile sources
    -->
    <target name="compile"
	    depends="init,bcel,src-file-init"
	    description="Compile Ibis to .class">
	    <!-- depend" -->
	<echo message="java.debug.value = ${java.debug.value}"/>
	<!--
	<echo message="I want to compile under ${src}: ${src.files}"/>
	-->
	<javac  destdir="${build}"
		debug="${java.debug.value}"
		listfiles="true"
		includes="${src.files}"
		srcdir="${src}">

	    <!--
	    <include name="ibis/frontend/**/*.java"/>
	    <include name="ibis/group/**/*.java"/>
	    <include name="ibis/io/**/*.java"/>

	    <include name="ibis/ipl/**/*.java"/>
	    <exclude name="ibis/ipl/impl/net/nio/**/*.java"/>
	    <exclude name="ibis/ipl/impl/net/gm/**/*.java"/>
	    <exclude name="ibis/ipl/impl/net/muxer/tcp_blk/**/*.java"/>
	    <exclude name="ibis/ipl/impl/messagePassing/panda/**/*.java"/>

	    <include name="ibis/satin/**/*.java"/>
	    <include name="ibis/classfile/**/*.java"/>
	    <include name="ibis/rmi/**/*.java"/>
	    <include name="ibis/util/**/*.java"/>
	    -->
	    <!--
	    <include name="${src.files}"/>
	    -->

	    <classpath refid="default.classpath"/>
	</javac>
    </target>


    <!--
	For a number of source modules, provide a separate target
	so we may compile only this source module, which is quicker.
    -->
    <target name="classfile" depends="init">
	<javac  destdir="${build}"
		debug="${java.debug.value}"
		srcdir="${src}">
	    <include name="ibis/classfile/**/*.java"/>
	    <classpath refid="default.classpath"/>
	</javac>
    </target>


    <target name="util" depends="init">
	<javac  destdir="${build}"
		debug="${java.debug.value}"
		srcdir="${src}">
	    <include name="ibis/util/**/*.java"/>
	    <classpath refid="default.classpath"/>
	</javac>
    </target>


    <target name="io" depends="init">
	<javac  destdir="${build}"
		debug="true">
	    <src path="io"/>
	    <classpath refid="default.classpath"/>
	    <include name="**/*.java"/>
	</javac>
    </target>


    <target name="frontend" depends="init">
	<javac  destdir="${build}"
		debug="${java.debug.value}"
		srcdir="${src}">
	    <include name="ibis/frontend/**/*.java"/>
	    <classpath refid="default.classpath"/>
	</javac>
    </target>


    <target name="satin" depends="init">
	<javac  destdir="${build}"
		debug="${java.debug.value}"
		srcdir="${src}">
	    <include name="ibis/satin/**/*.java"/>
	    <classpath refid="default.classpath"/>
	</javac>
    </target>


    <target name="ns" depends="init">
	<javac  destdir="${build}"
		debug="${java.debug.value}"
		srcdir="${src}">
	    <include name="ibis/ipl/impl/nameServer/**/*.java"/>
	    <classpath refid="default.classpath"/>
	</javac>
    </target>


    <target name="mp" depends="init">
	<javac  destdir="${build}"
		debug="${java.debug.value}"
		srcdir="${src}">
	    <include name="ibis/ipl/impl/messagePassing/**/*.java"/>
	    <exclude name="ibis/ipl/impl/messagePassing/panda/**/*.java"/>
	    <classpath refid="default.classpath"/>
	</javac>
    </target>


    <target name="net" depends="init">
	<javac  destdir="${build}"
		debug="${java.debug.value}"
		srcdir="${src}">
	    <include name="ibis/ipl/impl/net/**/*.java"/>
	    <exclude name="ibis/ipl/impl/net/nio/**/*.java"/>
	    <exclude name="ibis/ipl/impl/net/gm/**/*.java"/>
	    <exclude name="ibis/ipl/impl/net/muxer/tcp_blk/**/*.java"/>
	    <classpath refid="default.classpath"/>
	</javac>
    </target>


    &nativeTargets;

    <!--
	Compile the native code in the directory indicated by native.dir
    -->
    <target name="-build-native">
	<echo	level="debug"
		message="Invoke ant in ${native.dir}"/>
	<ant inheritAll="false" dir="${native.dir}">
	    <property name="native.dir" value="${native.dir}"/>
	    <property name="build" value="${build}"/>
	    <property name="ibis" value="${ibis}"/>
	    <!--
	    -->
	    <property name="optimization" value="${optimization}"/>
	    <property name="package.home.ant-cpptasks" value="${package.home.ant-cpptasks}"/>
	    <property name="package.home.ant-contrib" value="${package.home.ant-contrib}"/>
	</ant>
    </target>


    <!--
	Compile the native code in all directories indicated by native.src.path
    -->
    <target name="natives">
	    <!-- depends="compile,javah"-->
	<echo	level="debug"
		message="Native directories = ${native.src.path}"/>
	<echo	level="debug"
		message="package.home.ant-cpptasks = ${package.home.ant-cpptasks}"/>
	<foreach
		list="${native.src.path}"
		delimiter="${path.separator}"
		param="native.dir"
		target="-build-native"/>
    </target>


    <!--
	Compile, run IOGenerator, compile native code for the whole of Ibis
    -->
    <target name="build"
	    description="Build Ibis">
	<antcall inheritRefs="true" target="compile"/>
	<antcall inheritRefs="true" target="iogen"/>
	<antcall inheritRefs="true" target="javah"/>
	<antcall inheritRefs="true" target="natives"/>
    </target>



    <!--
	Run IOGenerator over the classlibs in $JAVA_HOME and
	put them into ${rewritten-classlibs}
    -->

    <property name="rewritten-classlibs" location="${src}/classlibs"/>

    <target name="-rewrite-unjar-one">
	<echo level="warning" message="Now unjar ${jar.file}"/>
	<mkdir dir="${rewritten-classlibs}"/>
	<unjar src="${jar.file}" dest="${rewritten-classlibs}"/>
    </target>

    <target name="-rewrite-iogen-one">
	<path id="iogen-files-ref">
	    <fileset dir="${iogen.dir}">
		<include name="**/*.class"/>
	    </fileset>
	</path>
	<pathconvert pathsep=" " property="iogen-one-files" refid="iogen-files-ref">
	    <map from="${rewritten-classlibs}${file.separator}" to=""/>
	</pathconvert>
	<echo	level="debug"
		message="Now try iogen over files ${iogen-one-files}"/>
	<antcall target="iogen-files">
	    <param name="iogen-files" value="${iogen-one-files}"/>
	    <param name="iogen-build" value="${rewritten-classlibs}"/>
	</antcall>
    </target>

    <target name="rewrite" depends="init">
	<!--
	-->
	<path id="java.jar.ref">
	    <fileset dir="${JAVA_HOME}/jre/lib">
		<include name="*.jar"/>
	    </fileset>
	</path>
	<property name="java.jar.files" refid="java.jar.ref"/>
	<foreach
		list="${java.jar.files}"
		delimiter="${path.separator}"
		target="-rewrite-unjar-one"
		param="jar.file"/>

	<path id="java.classlibs.ref">
	    <dirset dir="${rewritten-classlibs}">
		<include name="*"/>
		<exclude name="META-INF"/>
		<exclude name="com"/>
	    </dirset>
	    <dirset dir="${rewritten-classlibs}">
		<include name="com/*"/>
	    </dirset>
	</path>
	<property name="java.classlibs.files" refid="java.classlibs.ref"/>
	<echo	level="debug"
		message="Rewrite each of ${java.classlibs.files}"/>
	<foreach
		list="${java.classlibs.files}"
		delimiter="${path.separator}"
		target="-rewrite-iogen-one"
		param="iogen.dir"/>
    </target>



    <target name="apps"
	    depends="build,bcel"
	    description="Build Ibis apps">
	<ant dir="apps"/>
    </target>


    <target name="clean">
	<delete dir="build"/>
    </target>

    <target name="distclean" depends="clean">
	<delete file="build-properties"/>
    </target>


    <target name="configure">
	<input	message="Please enter the install directory of BCEL: "
		addproperty="config.home.bcel"/>
	<input	message="Please enter the install directory of BCEL-additions: "
		addproperty="config.home.bcel-additions"/>
	<input	message="Please enter the install directory of ant-contrib: "
		addproperty="config.home.ant-contrib"/>
	<input	message="Please enter the install directory of ant-cpptasks: "
		addproperty="config.home.ant-cpptasks"/>

	<property name="package.home.ibis"
		location="${ibis}"/>
	<property name="package.home.bcel"
		location="${config.home.bcel}"/>
	<property name="package.home.bcel-additions"
		location="${config.home.bcel-additions}"/>
	<property name="package.home.ant-contrib"
		location="${config.home.ant-contrib}"/>
	<property name="package.home.ant-cpptasks"
		location="${config.home.ant-cpptasks}"/>

	<!--
	<echo	file="config.status"
		append="false">${package.home.bcel}
	</echo>
	<echo	file="config.status"
		append="true">${package.home.bcel-additions}
	</echo>
	<echo	file="config.status"
		append="true">${package.home.ant-contrib}
	</echo>
	<echo	file="config.status"
		append="true">${package.home.ant-cpptasks}
	</echo>
	-->

	<copy
		overwrite="true"
		file="${ibis}/build-properties.in"
		tofile="${ibis}/build-properties">
	    <filterchain>
		<filterreader
			classname="org.apache.tools.ant.filters.ReplaceTokens">
		    <param  type="token"
			    name="IBIS"
			    value="${package.home.ibis}"/>
		    <param  type="token"
			    name="BCEL_HOME"
			    value="${package.home.bcel}"/>
		    <param  type="token"
			    name="BCEL_ADDITIONS"
			    value="${package.home.bcel-additions}"/>
		    <param  type="token"
			    name="ANT_CONTRIB"
			    value="${package.home.ant-contrib}"/>
		    <param  type="token"
			    name="ANT_CPPTASKS"
			    value="${package.home.ant-cpptasks}"/>
		</filterreader>
	    </filterchain>
	</copy>
	<replaceregexp
		file="${ibis}/build-properties"
		flags="g"
		match="\${file.separator}"
		replace="/"/>
    </target>



</project>
