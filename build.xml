<project
    name="ibis"
    default="build"
    basedir=".">

    <description>
	Top-level Ibis build.
    </description>

    <property name="ibis"        location="."/>

    <!--
	This must come first.
	We cannot require ant-contrib before we have configured.
    -->
    <import file="${ibis}/build-config.xml"/>

    <import file="${ibis}/build-properties.xml"/>

    <property name="src"         location="${ibis}/src"/>
    <property name="build"       location="${ibis}/build"/>
    <property name="docs"        location="${ibis}/docs"/>

    <target name="init" depends="property-init">
	<tstamp/>

	<!--
	<property name="p-in" value="\\abc\\def"/>
	<echo message="p-in = ${p-in}"/>
	<propertyregex
		property="p-out"
		input="${p-in}"
		regexp="\\\\"
		replace="\\\\"
		global="true"/>
	<echo message="p-out = ${p-out}"/>
	-->

	<mkdir dir="${build}"/>
    </target>


    <!--
	We depend on bcel. I am not sure it should be inside Ibis,
	but there it is, so I include it in build.xml.
    -->
    <target name="bcel" depends="init">
	<javac  destdir="${build}"
		srcdir="${ibis}/bcel-additions">
	    <include name="**/*.java"/>
	    <classpath refid="default.classpath"/>
	</javac>
    </target>

    <!--
	The list of directories that contain native sources.
    -->
    <path id="native.src.misc">
	<!--
	-->
	<pathelement path="${ibis}/src/ibis/io"/>
	<pathelement path="${ibis}/src/ibis/util/nativeCode"/>
	<!--
	-->
    </path>

    <path id="native.src.mp">
	<!--
	-->
	<pathelement path="${ibis}/src/ibis/impl/messagePassing"/>
	<pathelement path="${ibis}/src/ibis/impl/messagePassing/panda"/>
	<!--
	<pathelement path="${ibis}/src/ibis/impl/messagePassing/mpi"/>
	-->
	<!--
	-->
    </path>

    <path id="native.src.net">
	<!--
	-->
	<pathelement path="${ibis}/src/ibis/impl/net/gm"/>
	<!--
	-->
    </path>

    <property name="native.src.mp" refid="native.src.mp"/>
    <property name="native.src.misc" refid="native.src.misc"/>
    <property name="native.src.net" refid="native.src.net"/>

    <import file="${ibis}/build-iogen.xml"/>

    <target name="depend">
	<depend
		srcDir="${src}"
		destDir="${build}"
		cache="${build}/depCache"
		closure="yes"
		dump="true"
		/>
    </target>

    <!--
	For a number of source modules, provide a separate target
	so we may compile only this source module, which is quicker.
    -->

    <target name="util" depends="init">
	<patternset id="build.sources.util">
	    <include name="ibis/util/**/*.java"/>
	</patternset>
	<antcall inheritAll="true" inheritRefs="true" target="compile">
	    <reference refid="build.sources.util" torefid="build.sources"/>
	</antcall>
    </target>


    <target name="io" depends="init">
	<patternset id="build.sources.io">
	    <include name="ibis/io/**/*.java"/>
	</patternset>
	<antcall inheritAll="true" inheritRefs="true" target="compile">
	    <reference refid="build.sources.io" torefid="build.sources"/>
	</antcall>
    </target>


    <target name="frontend" depends="init,bcel">
	<patternset id="build.sources.frontend">
	    <include name="ibis/frontend/**/*.java"/>
	</patternset>
	<antcall inheritAll="true" inheritRefs="true" target="compile">
	    <reference refid="build.sources.frontend" torefid="build.sources"/>
	</antcall>
    </target>


    <target name="satin" depends="init">
	<patternset id="build.sources.satin">
	    <include name="ibis/satin/**/*.java"/>
	</patternset>
	<antcall inheritAll="true" inheritRefs="true" target="compile">
	    <reference refid="build.sources.satin" torefid="build.sources"/>
	</antcall>
    </target>


    <target name="gmi" depends="init">
	<patternset id="build.sources.gmi">
	    <include name="ibis/gmi/**/*.java"/>
	</patternset>
	<antcall inheritAll="true" inheritRefs="true" target="compile">
	    <reference refid="build.sources.gmi" torefid="build.sources"/>
	</antcall>
    </target>


    <target name="rmi" depends="init">
	<patternset id="build.sources.rmi">
	    <include name="ibis/rmi/**/*.java"/>
	</patternset>
	<antcall inheritAll="true" inheritRefs="true" target="compile">
	    <reference refid="build.sources.rmi" torefid="build.sources"/>
	</antcall>
    </target>

    <target name="ipl" depends="init">
	<patternset id="build.sources.ipl">
	    <include name="ibis/ipl/**/*.java"/>
	</patternset>
	<antcall inheritAll="true" inheritRefs="true" target="compile">
	    <reference refid="build.sources.ipl" torefid="build.sources"/>
	</antcall>
    </target>


    <target name="ns" depends="init">
	<patternset id="build.sources.ns">
	    <include name="ibis/impl/nameServer/**/*.java"/>
	</patternset>
	<antcall inheritAll="true" inheritRefs="true" target="compile">
	    <reference refid="build.sources.ns" torefid="build.sources"/>
	</antcall>

	<java   classname="ibis.impl.nameServer.tcp.NameServer"
		fork="true">
	    <classpath refid="default.classpath"/>
	    <arg line="-port 7654"/>
	</java>
    </target>


    <target name="mp" depends="init">
	<patternset id="build.sources.mp">
	    <include name="ibis/impl/messagePassing/**/*.java"/>
	    <exclude name="ibis/impl/messagePassing/panda/**/*.java"/>
	</patternset>
	<antcall inheritAll="true" inheritRefs="true" target="compile">
	    <reference refid="build.sources.mp" torefid="build.sources"/>
	</antcall>
    </target>


    <target name="tcp" depends="init">
	<patternset id="build.sources.tcp">
	    <include name="ibis/impl/tcp/**/*.java"/>
	</patternset>
	<antcall inheritAll="true" inheritRefs="true" target="compile">
	    <reference refid="build.sources.tcp" torefid="build.sources"/>
	</antcall>
    </target>


    <target name="net" depends="init">
	<patternset id="build.sources.net">
	    <include name="ibis/impl/net/**/*.java"/>
	    <exclude name="ibis/impl/net/nio/**/*.java"/>
	</patternset>
	<antcall inheritAll="true" inheritRefs="true" target="compile">
	    <reference refid="build.sources.net" torefid="build.sources"/>
	</antcall>
    </target>

    <import file="${ibis}/build-native.xml"/>

    <!--
	Compile the native code in the directory indicated by native.dir
    -->
    <target name="-build-native">
	<echo	level="debug"
		message="Invoke ant in ${native.dir}"/>
	<ant inheritAll="false" dir="${native.dir}">
	    <property name="native.dir" value="${native.dir}"/>
	    <property name="build" value="${build}"/>
	    <property name="ibis" value="${ibis}"/>
	    <!--
	    <property name="optimization" value="${optimization}"/>
	    <property name="package.home.ant-cpptasks" value="${package.home.ant-cpptasks}"/>
	    <property name="package.home.ant-contrib" value="${package.home.ant-contrib}"/>
	    -->
	    <property name="contrib.initialized" value="${contrib.initialized}"/>
	</ant>
    </target>


    <!--
	Compile the native code in all directories indicated by native,src.*
    -->

    <target name="natives.misc" depends="property-init">
	<echo	level="debug"
		message="Native directories = ${native.src.misc}"/>
	<foreach
		list="${native.src.misc}"
		delimiter="${path.separator}"
		param="native.dir"
		target="-build-native"/>
    </target>

    <target name="natives.net" depends="property-init">
	    <!-- depends="compile,javah"-->
	<echo	level="debug"
		message="Native directories = ${native.src.net}"/>
	<foreach
		list="${native.src.net}"
		delimiter="${path.separator}"
		param="native.dir"
		target="-build-native"/>
    </target>

    <target name="natives.mp" depends="property-init">
	    <!-- depends="compile,javah"-->
	<echo	level="debug"
		message="Native directories = ${native.src.mp}"/>
	<foreach
		list= "${native.src.mp}"
		delimiter="${path.separator}"
		param="native.dir"
		target="-build-native"/>
    </target>

    <target name="natives" depends="natives.misc,natives.mp,natives.net">
    </target>

    <target name="compile"
	    depends="init,bcel"
	    description="Compile Ibis to .class">
	    <!-- depend" -->
	<echo message="java.debug.value = ${java.debug.value}"/>
	<javac  destdir="${build}"
		debug="${java.debug.value}"
		listfiles="true"
		srcdir="${src}">
	    <patternset refid="build.sources"/>

	    <classpath refid="default.classpath"/>
	</javac>
    </target>

    <!--
	Compile, run IOGenerator, compile native code for the whole of Ibis
    -->
    <target name="build"
	    description="Build Ibis">
	<patternset id="build.sources.all">
	    <include name="**/*.java"/>
	    <exclude name="ibis/impl/net/nio/**/*.java"/>
	    <exclude name="ibis/impl/messagePassing/panda/**/*.java"/>
	    <exclude name="ibis/repmi/**/*.java"/>
	</patternset>
	<antcall inheritAll="true" inheritRefs="true" target="compile">
	    <reference refid="build.sources.all" torefid="build.sources"/>
	</antcall>
	<antcall inheritAll="true" inheritRefs="true" target="iogen"/>
	<antcall inheritAll="true" inheritRefs="true" target="javah"/>
	<antcall inheritAll="true" inheritRefs="true" target="natives"/>
    </target>

    <!--
	Compile, run IOGenerator, compile native code for TCP Ibis
    -->
    <target name="build-tcp"
	    description="Build TCP Ibis">
	<patternset id="build.sources.tcp">
	    <include name="**/*.java"/>
	    <exclude name="ibis/impl/net/**/*.java"/>
	    <exclude name="ibis/impl/messagePassing/**/*.java"/>
	    <exclude name="ibis/repmi/**/*.java"/>
	</patternset>
	<antcall inheritAll="true" inheritRefs="true" target="compile">
	    <reference refid="build.sources.tcp" torefid="build.sources"/>
	</antcall>
	<antcall inheritAll="true" inheritRefs="true" target="iogen"/>
	<antcall inheritAll="true" inheritRefs="true" target="javah"/>
	<antcall inheritAll="true" inheritRefs="true" target="natives.misc"/>
    </target>

    <!--
	Compile, run IOGenerator, compile native code for Net Ibis
    -->
    <target name="build-net"
	    description="Build NetIbis">
	<patternset id="build.sources.net">
	    <include name="**/*.java"/>
	    <exclude name="ibis/impl/tcp/**/*.java"/>
	    <exclude name="ibis/impl/messagePassing/**/*.java"/>
	    <exclude name="ibis/repmi/**/*.java"/>
	</patternset>
	<antcall inheritAll="true" inheritRefs="true" target="compile">
	    <reference refid="build.sources.net" torefid="build.sources"/>
	</antcall>
	<antcall inheritAll="true" inheritRefs="true" target="iogen"/>
	<antcall inheritAll="true" inheritRefs="true" target="javah"/>
	<antcall inheritAll="true" inheritRefs="true" target="natives.misc"/>
	<antcall inheritAll="true" inheritRefs="true" target="natives.net"/>
    </target>

    <!--
	Compile, run IOGenerator, compile native code for Net Ibis
    -->
    <target name="build-mp"
	    description="Build messagePassing Ibis">
	<patternset id="build.sources.mp">
	    <include name="**/*.java"/>
	    <exclude name="ibis/impl/tcp/**/*.java"/>
	    <exclude name="ibis/impl/net/**/*.java"/>
	    <exclude name="ibis/impl/messagePassing/panda/**/*.java"/>
	    <exclude name="ibis/repmi/**/*.java"/>
	</patternset>
	<antcall inheritAll="true" inheritRefs="true" target="compile">
	    <reference refid="build.sources.mp" torefid="build.sources"/>
	</antcall>
	<antcall inheritAll="true" inheritRefs="true" target="iogen"/>
	<antcall inheritAll="true" inheritRefs="true" target="javah"/>
	<antcall inheritAll="true" inheritRefs="true" target="natives.misc"/>
	<antcall inheritAll="true" inheritRefs="true" target="natives.mp"/>
    </target>

    <!--
	Run IOGenerator over the classlibs in $JAVA_HOME and
	put them into ${rewritten-classlibs}
    -->

    <property name="rewritten-classlibs" location="${ibis}/classlibs"/>

    <target name="-rewrite-unjar-one">
	<echo level="warning" message="Now unjar ${jar.file}"/>
	<unjar src="${jar.file}" dest="${rewritten-classlibs}"/>
    </target>

    <target name="-rewrite-iogen-one">
	<echo level="debug"
		message="Now try iogen over files in ${iogen.dir}"/>
	<antcall inheritRefs="true" target="iogen-files">
	    <param name="iogen-files" value="${iogen.dir}"/>
	    <param name="iogen-build" value="${rewritten-classlibs}"/>
	</antcall>
    </target>

    <target name="rewrite" depends="init">
	<!--
	    First, find and extract jars.
	-->
	<path id="java.jar.ref">
	    <fileset dir="${JAVA_HOME}/jre/lib">
		<include name="**/*.jar"/>
	    </fileset>
	</path>
	<property name="java.jar.files" refid="java.jar.ref"/>
	<mkdir dir="${rewritten-classlibs}"/>
	<foreach
		list="${java.jar.files}"
		delimiter="${path.separator}"
		target="-rewrite-unjar-one"
		param="jar.file"/>

	<!--
	    Then, run IOGenerator on each subdirectory of classlibs.
	    Note: we could run IOGenerator on "." in classlibs,
	    rewriting everything in one go, but IOGenerator uses too
	    much memory.
	-->
	<path id="java.classlibs.ref">
	    <dirset dir="${rewritten-classlibs}">
		<include name="*"/>
	    </dirset>
	</path>

	<!--
	    We now have a list of absolute pathnames. Convert them to
	    relative.
	-->
	<pathconvert pathsep="${path.separator}" property="java.classlibs.files" refid="java.classlibs.ref">
	    <map from="${rewritten-classlibs}${file.separator}" to=""/>
	</pathconvert>

	<!--
	    And rewrite ...
	-->
	<echo level="debug"
		message="Rewrite each of ${java.classlibs.files}"/>
	<foreach
		list="${java.classlibs.files}"
		delimiter="${path.separator}"
		target="-rewrite-iogen-one"
		param="iogen.dir"/>
    </target>

    <target name="apps"
	    depends="build,bcel"
	    description="Build Ibis apps">
	<ant dir="apps"/>
    </target>

    <target name="clean">
	<delete dir="${rewritten-classlibs}"/>
	<delete dir="${build}"/>
	<delete dir="${docs}"/>
    </target>

    <target name="distclean" depends="clean">
	<delete file="build-properties"/>
	<delete file="config.mk"/>
	<delete file="config.mk.old"/>
	<delete file="config.mk.orig"/>
	<delete file="configuration.sh"/>
	<delete dir="bin"/>
    </target>

    <target name="docs" depends="init">
	<!-- Create the javadoc directory -->
	<delete dir="${docs}"/>
	<mkdir dir="${docs}"/>
	<copy
	    file="${ibis}/src/ibis/doc/overview.html"
	    tofile="${ibis}/docs/overview.html">
	</copy>
	<mkdir dir="${docs}/api"/>
	<javadoc packagenames="ibis.ipl,ibis.impl.*,ibis.gmi,ibis.rmi,ibis.io,ibis.satin" sourcepath="${src}" destdir="${docs}/api" author="true" version="true" use="true" windowtitle="Ibis Documentation" overview="${ibis}/docs/overview.html" doctitle="Ibis Documentation" bottom="The Ibis project">
	    <classpath refid="default.classpath"/>
	    <group title="Ibis GMI" packages="ibis.gmi"/>
	    <group title="Ibis RMI" packages="ibis.rmi"/>
	    <group title="Ibis IPL" packages="ibis.ipl*"/>
	    <group title="Ibis IO" packages="ibis.io"/>
	    <group title="Ibis Satin" packages="ibis.satin"/>
	</javadoc>
    </target>
</project>
