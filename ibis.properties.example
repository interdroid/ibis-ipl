#Example ibis.properties file

#This file lists properties valid for various parts of ibis
#Also listed are a description, and the default value of this property, if any

#### Generic Ibis properties ####

## String: name of the pool this ibis belongs to
# ibis.pool.name = 

## Integer: size of the pool this ibis belongs to
# ibis.pool.size = 

## address of the central ibis server
# ibis.server.address = 

## comma seperated list of hub addresses. The server address is appended to this list, and thus is the default hub if no hub is specified
# ibis.hub.addresses = 

## Nickname or classname of the Ibis implementation
# ibis.name = 

## Name of the property file used for the configuration of Ibis
# ibis.properties.file = 

## Path used to find Ibis implementations
# ibis.impl.path = 

## Boolean: If true, makes Ibis more verbose, if false, does not
# ibis.verbose = false

## Set the location of Ibis. Specified as multiple levels, seperated by a '@', e.g. machine@cluster@site@grid@world. Defaults to a single level location with the hostname of the machine
# ibis.location = 

## Boolean: If true, a multi level location is automatically created
# ibis.location.automatic = false

## Set a string that will be appended to the automatically generated location.
# ibis.location.postfix = 

## implementation of the registry. Not all Ibis implementations use this property
# ibis.registry.impl = ibis.ipl.impl.registry.central.Registry

#### Ibis Server properties ####

## Comma seperated list of hubs.
# ibis.server.hub.addresses = 

## Boolean: if true, also start a hub at the server
# ibis.server.start.hub = true

## Boolean: if true, only start a hub, not the rest of the server
# ibis.server.hub.only = false

## Port which the server binds to
# ibis.server.port = 8888

## Path used to find service implementations
# ibis.server.impl.path = 

## Boolean: if true, events of services are printed to standard out.
# ibis.server.print.events = false

## Boolean: if true, details of errors (like stacktraces) are printed
# ibis.server.print.errors = false

## Boolean: if true, statistics are printed to standard out regularly.
# ibis.server.print.stats = false

## determines level of verbosity (TRACE,DEBUG,INFO,WARN,ERROR or FATAL) of the server log
# ibis.server.log.level = INFO

## Address of the server
# ibis.server.address = 

#### Ibis PoolInfo properties ####

## Name of the pool
# ibis.pool.name = 

## Int: size of the pool
# ibis.pool.size = 

## String used as an identifier for this machine. Default is the Fully Qualified Domain name of this machine
# ibis.host = 

## Cluster of the local machine
# ibis.cluster = unknown

#### Ibis Central Registry properties ####

## Int(seconds): how often is a member of a pool expected to report it is still alive
# ibis.registry.central.heartbeat.interval = 120

## Int(seconds): how often does the server send out events any member may have missed
# ibis.registry.central.event.push.interval = 60

## Boolean: do we gossip, or send events centrally
# ibis.registry.central.gossip = false

## Int(seconds): how often do we gossip
# ibis.registry.central.gossip.interval = 1

## Boolean: if true, the server gossips more often if there are more nodes in a pool
# ibis.registry.central.adapt.gossip.interval = false

## Boolean: use a broadcast tree instead of serial send or gossiping
# ibis.registry.central.tree = false

## Boolean: bootstrap with peers, not just with the server
# ibis.registry.central.peer.bootstrap = true

## Boolean: if true, a stand-alone server is used/expected
# ibis.registry.central.server.standalone = false

## Socket Address of standalone server to connect to
# ibis.registry.central.server.address = 

## Int: Port which the standalone server binds to
# ibis.registry.central.server.port = 7777

## Int(seconds): how long do clients attempt to connect to the server and peers before giving up
# ibis.registry.central.connect.timeout = 120

## Int(seconds): how long does the server attempt to connect to a client before giving up
# ibis.registry.central.server.connect.timeout = 10

## Boolean: if true, events are printed to standard out
# ibis.registry.central.server.print.events = false

## Boolean: if true, details of errors are printed to standard out
# ibis.registry.central.server.print.errors = false

## Boolean: if true, statistics are printed to standard out regularly
# ibis.registry.central.server.print.stats = false

