<!DOCTYPE project [
    <!ENTITY sharedProperties SYSTEM "../../../../build-properties.xml">
    <!ENTITY nativeTargets    SYSTEM "../../../../build-native.xml">
]>

<project
    name="ibis.ipl.impl.net.gm.native"
    default="build"
    basedir=".">

    <description>
	Compile natives in this directory

	Expect to inherit the following properties:
	    native.dir		the directory of this build
	    ibis		the root of the ibis source tree
	    native-path		${native.dir} relative to ${ibis}
	    build		the root of the ibis build tree
	    default.classpath	a ref property with default classpath

	The shared target definitions require you to define:
	    local.includes	a property that contains include paths specific
				to this module

	Optional:
	    local.lib		the truncated name of the lib you want to create
    </description>

    <property name="local.lib" value="ibis_local_net_gm"/>
    <property name="closure.lib" value="net_ibis_gm"/>


    &sharedProperties;
    &nativeTargets;


    <target name="gm-lib">
	<if>
	    <os family="unix"/>
	    <then>
		<property name="gm.lib.dir"  location="${package.home.gm}/lib"/>
		<path id="local.includes-ref">
		    <pathelement path="${package.home.gm}/include"/>
		</path>
	    </then>
	<elseif>
	    <os family="windows"/>
	    <then>
		<property name="gm.lib.dir"  location="${package.home.gm}/examples"/>
		<path id="local.includes-ref">
		    <pathelement path="${package.home.gm}"/>
		</path>
	    </then>
	</elseif>
	</if>
	<property name="local.includes" refid="local.includes-ref"/>

	<maplibrary property="library.path" name="${closure.lib}"/>
	<echo level="warning" message="The library is ${library.path}"/>

	<outofdate>
	    <sourcefiles>
		<fileset dir=".">
		    <include name="*.c"/>
		</fileset>
	    </sourcefiles>
	    <targetfiles>
		<pathelement path="${build}/lib/${library.path}"/>
	    </targetfiles>

	    <sequential>
		<cc
			outfile="${build}/lib/${closure.lib}"
			outtype="shared"
			runtime="dynamic"
			incremental="true"
			warnings="severe"
			name="${c.compiler}"
			debug="${native.debug.value}">
		    <libset dir="${gm.lib.dir}"    libs="gm"/>
		    <includepath>
			<pathelement path="${local.includes}"/>
			<pathelement path="${default.includes}"/>
		    </includepath>
		    <fileset dir="." includes="*.c"/>
		</cc>
	    </sequential>
	</outofdate>
    </target>


    <target name="build"
	    depends="native-init,gm-lib">
    </target>

</project>
