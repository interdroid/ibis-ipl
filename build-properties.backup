# Template user configuration.
# The first call of
#   ant
# or an explicit call of
#   ant configure
# uses this template to generate $IBIS/build-properties.
# After this, the user must configure his build by editing
# the generated $IBIS/build-properties.

# JAVA_HOME                   = /usr/local/ibm-java/IBMJava2-141
# JAVA_HOME                   = /usr/local/sun-java/jdk1.4
# JAVA_HOME                   = /usr/local/sun-java/j2sdk1.5.0
JAVA_HOME                   = /opt/sun-jdk-1.4.2.08
package.home.ibis           = /home/rob/contrib/eclipse/workspace/ibis
ibisBuild                   = ${ibis}/build
karmi                       = /home/rob/contrib/eclipse/workspace/karmi/karmi-transport-1.07g

package.home.gm             = /home/rob/contrib/eclipse/workspace/ibis/${install.home.gm}
package.home.daslib         = /home/rob/contrib/eclipse/workspace/ibis/${install.home.daslib}
package.home.lfc            = /home/rob/contrib/eclipse/workspace/ibis/${install.home.lfc}
package.home.panda          = /home/rob/contrib/eclipse/workspace/ibis/${install.home.panda}
package.home.mpi            = /home/rob/contrib/eclipse/workspace/ibis/${install.home.mpi}

# Choose a value for javac optimization: either "optimize" or "debug"
java.optimization           = optimize
# java.optimization           = debug

# Include debug symbols in the java code?
# If you don't want debug symbols, comment the following line out.
# The build system only checks whether this property is defined,
# so giving it a value of "false" defeats your purpose.
java.debug                  = true

# Choose a value for the C compiler of your liking
c.compiler.unix             = gcc
# c.compiler.windows          = bcc
c.compiler.windows          = msvc
c.compiler.mac              = gcc

# The optimize flag must be specified by hand for the different archs.
# cpptasks has no "optimize" attribute (yet)
c.optimize.unix             = -O3
c.optimize.windows          = -O2
c.optimize.mac              = -O3

# Choose a value for native optimization: either "optimize" or "debug"
c.optimization              = optimize
# c.optimization              = debug

# Include debug symbols in the native code?
# If you don't want debug symbols, comment the following line out.
# The build system only checks whether this property is defined,
# so giving it a value of "false" defeats your purpose.
c.debug                     = true

# The configure process may append properties of its choice here,
# e.g. to signify whether this is a DAS build.
