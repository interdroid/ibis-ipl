<project
    name="build-config"
    default="configure"
    basedir=".">

    <description>
      Install-time configuration.
      Figure out where the packages are that we depend on.
    </description>


    <target name="config.das"
	    depends="config-set-os"
	    if="config.is-das">
	<property
		name="default.home.bcel"
		location="3rdparty/bcel-5.1.jar"/>
	<property
		name="default.home.ant-contrib"
		location="3rdparty/ant-contrib-0.4.jar"/>
	<property
		name="default.home.ant-cpptasks"
		location="3rdparty/cpptasks-1.0b1.jar"/>

	<property
		name="default.home.panda"
		location="/usr/local/VU/panda/panda4.0"/>
	<property
		name="default.home.daslib"
		location="/usr/local/VU/daslib"/>
	<property
		name="default.home.lfc"
		location="/usr/local/VU/lfc/lfc-gm"/>
	<property
		name="default.home.mpi"
		location="/usr/local/mpich/mpich-gm"/>
	<property
		name="default.home.gm"
		location="/usr/local/gm/current"/>
    </target>

    <target name="config.workstation"
	    depends="config-set-os"
	    unless="config.is-das">
	<property
		name="default.home.bcel"
		location="3rdparty/bcel-5.1.jar"/>
	<property
		name="default.home.ant-contrib"
		location="3rdparty/ant-contrib-0.4.jar"/>
	<property
		name="default.home.ant-cpptasks"
		location="3rdparty/cpptasks-1.0b1.jar"/>
	<property
		name="default.home.panda"
		location="../panda/panda4.0"/>
	<property
		name="default.home.daslib"
		location="../daslib"/>
	<property
		name="default.home.lfc"
		location="../lfc-gm"/>
	<property
		name="default.home.mpi"
		location="/usr/local/mpich/mpich-gm"/>
	<property
		name="default.home.gm"
		location="../GM"/>
    </target>

    <target name="config.mac"
	    depends="config-set-os"
	    if="config.os-is-windows">
    </target>

    <target name="config-domainname" depends="proprietary-tasks">
	<hostname hostname="hostname" domainname="domainname"/>
	<echo message="Hostname ${hostname} domainname ${domainname}"/>
	<condition property="config.is-das">
	    <or>
		<equals arg1="${domainname}" arg2="das2.cs.vu.nl"/>
		<!-- <equals arg1="${domainname}" arg2="cs.vu.nl"/> -->
		<equals arg1="${domainname}" arg2="das2.liacs.nl"/>
		<equals arg1="${domainname}" arg2="das2.nikhef.nl"/>
		<equals arg1="${domainname}" arg2="das2.its.tudelft.nl"/>
		<equals arg1="${domainname}" arg2="das2.phys.uu.nl"/>

		<!-- Dunno why but the VU DAS workstations are not in
		     the DAS domain -->
		<equals arg1="${hostname}" arg2="mercury.cs.vu.nl"/>
		<equals arg1="${hostname}" arg2="venus.cs.vu.nl"/>
		<equals arg1="${hostname}" arg2="mars.cs.vu.nl"/>
		<equals arg1="${hostname}" arg2="drum.cs.vu.nl"/>
		<equals arg1="${hostname}" arg2="kog.cs.vu.nl"/>
		<equals arg1="${hostname}" arg2="swpc429.cs.vu.nl"/>
		<equals arg1="${hostname}" arg2="fspc060.cs.vu.nl"/>
		<equals arg1="${hostname}" arg2="fspc061.cs.vu.nl"/>
		<equals arg1="${hostname}" arg2="fspc062.cs.vu.nl"/>
		<equals arg1="${hostname}" arg2="fspc063.cs.vu.nl"/>
		<equals arg1="${hostname}" arg2="fspc064.cs.vu.nl"/>
		<equals arg1="${hostname}" arg2="fspc065.cs.vu.nl"/>
		<equals arg1="${hostname}" arg2="fspc066.cs.vu.nl"/>
		<equals arg1="${hostname}" arg2="fspc067.cs.vu.nl"/>
		<equals arg1="${hostname}" arg2="fspc068.cs.vu.nl"/>
		<equals arg1="${hostname}" arg2="fspc069.cs.vu.nl"/>
	    </or>
	</condition>
	<echo message="config.is-das = ${config.is-das}"/>
    </target>

    <target name="config-set-os" depends="config-domainname">
	<condition property="config.os-is-unix"    value="true">
	    <os family="unix"/>
	</condition>
	<condition property="config.os-is-windows" value="true">
	    <os family="windows"/>
	</condition>
	<condition property="config.os-is-mac"     value="true">
	    <os family="mac"/>
	</condition>
    </target>

    <target name="config-init" depends="config.das,config.workstation,config.mac">
    </target>


    <target name="configure" depends="config-init">

	<input
		message="Please enter the jar of BCEL: [${default.home.bcel}] "
		addproperty="install.home.bcel"/>
	<!--
	<input
		message="Please enter the install directory of BCEL-additions: "
		addproperty="install.home.bcel-additions"/>
	-->
	<property
		name="install.home.bcel-additions"
		location="${ibis}/bcel-additions"/>

	<input
		message="Please enter the jar of ant-contrib: [${default.home.ant-contrib}] "
		addproperty="install.home.ant-contrib"/>
	<input
		message="Please enter the jar of ant-cpptasks: [${default.home.ant-cpptasks}] "
		addproperty="install.home.ant-cpptasks"/>

	<input
		message="Please enter the install directory of gm: [${default.home.gm}] "
		addproperty="install.home.gm"/>
	<input
		message="Please enter the install directory of daslib: [${default.home.daslib}] "
		addproperty="install.home.daslib"/>
	<input
		message="Please enter the install directory of lfc: [${default.home.lfc}] "
		addproperty="install.home.lfc"/>
	<input
		message="Please enter the install directory of panda: [${default.home.panda}] "
		addproperty="install.home.panda"/>
	<input
		message="Please enter the install directory of mpi: [${default.home.mpi}] "
		addproperty="install.home.mpi"/>


	<property
		name="config.home.ibis"
		location="${ibis}"/>

	<condition property="config.home.bcel-s" value="${default.home.bcel}">
	    <equals arg1="${install.home.bcel}" arg2=""/>
	</condition>
	<condition property="config.home.bcel-s" value="${install.home.bcel}">
	    <not>
		<equals arg1="${install.home.bcel}" arg2=""/>
	    </not>
	</condition>
	<property name="config.home.bcel"
		location="${config.home.bcel-s}"/>

	<property name="config.home.bcel-additions"
		location="${install.home.bcel-additions}"/>

	<condition property="config.home.ant-contrib-s" value="${default.home.ant-contrib}">
	    <equals arg1="${install.home.ant-contrib}" arg2=""/>
	</condition>
	<condition property="config.home.ant-contrib-s" value="${install.home.ant-contrib}">
	    <not>
		<equals arg1="${install.home.ant-contrib}" arg2=""/>
	    </not>
	</condition>
	<property name="config.home.ant-contrib"
		location="${config.home.ant-contrib-s}"/>

	<condition property="config.home.ant-cpptasks-s" value="${default.home.ant-cpptasks}">
	    <equals arg1="${install.home.ant-cpptasks}" arg2=""/>
	</condition>
	<condition property="config.home.ant-cpptasks-s" value="${install.home.ant-cpptasks}">
	    <not>
		<equals arg1="${install.home.ant-cpptasks}" arg2=""/>
	    </not>
	</condition>
	<property name="config.home.ant-cpptasks"
		location="${config.home.ant-cpptasks-s}"/>

	<condition property="config.home.gm-s" value="${default.home.gm}">
	    <equals arg1="${install.home.gm}" arg2=""/>
	</condition>
	<condition property="config.home.gm-s" value="${install.home.gm}">
	    <not>
		<equals arg1="${install.home.gm}" arg2=""/>
	    </not>
	</condition>
	<property name="config.home.gm"
		location="${config.home.gm-s}"/>

	<condition property="config.home.daslib-s" value="${default.home.daslib}">
	    <equals arg1="${install.home.daslib}" arg2=""/>
	</condition>
	<condition property="config.home.daslib-s" value="${install.home.daslib}">
	    <not>
		<equals arg1="${install.home.daslib}" arg2=""/>
	    </not>
	</condition>
	<property name="config.home.daslib"
		location="${config.home.daslib-s}"/>

	<condition property="config.home.lfc-s" value="${default.home.lfc}">
	    <equals arg1="${install.home.lfc}" arg2=""/>
	</condition>
	<condition property="config.home.lfc-s" value="${install.home.lfc}">
	    <not>
		<equals arg1="${install.home.lfc}" arg2=""/>
	    </not>
	</condition>
	<property name="config.home.lfc"
		location="${config.home.lfc-s}"/>

	<condition property="config.home.panda-s" value="${default.home.panda}">
	    <equals arg1="${install.home.panda}" arg2=""/>
	</condition>
	<condition property="config.home.panda-s" value="${install.home.panda}">
	    <not>
		<equals arg1="${install.home.panda}" arg2=""/>
	    </not>
	</condition>
	<property name="config.home.panda"
		location="${config.home.panda-s}"/>

	<condition property="config.home.mpi-s" value="${default.home.mpi}">
	    <equals arg1="${install.home.mpi}" arg2=""/>
	</condition>
	<condition property="config.home.mpi-s" value="${install.home.mpi}">
	    <not>
		<equals arg1="${install.home.mpi}" arg2=""/>
	    </not>
	</condition>
	<property name="config.home.mpi"
		location="${config.home.mpi-s}"/>


	<!--
	<echo	file="config.status"
		append="false">${config.home.bcel}
	</echo>
	<echo	file="config.status"
		append="true">${config.home.bcel-additions}
	</echo>
	<echo	file="config.status"
		append="true">${config.home.ant-contrib}
	</echo>
	<echo	file="config.status"
		append="true">${config.home.ant-cpptasks}
	</echo>
	-->

	<property name="ibis.super" location="${config.home.ibis}"/>
	<copy
		overwrite="true"
		file="${ibis}/build-properties.in"
		tofile="${ibis}/build-properties">
	    <filterchain>
		<filterreader
			classname="org.apache.tools.ant.filters.ReplaceTokens">
		    <param  type="token"
			    name="IBIS"
			    value="${config.home.ibis}"/>
		    <param  type="token"
			    name="BCEL_HOME"
			    value="${config.home.bcel}"/>
		    <param  type="token"
			    name="BCEL_ADDITIONS"
			    value="${config.home.bcel-additions}"/>
		    <param  type="token"
			    name="ANT_CONTRIB"
			    value="${config.home.ant-contrib}"/>
		    <param  type="token"
			    name="ANT_CPPTASKS"
			    value="${config.home.ant-cpptasks}"/>

		    <param  type="token"
			    name="GM_HOME"
			    value="${config.home.gm}"/>
		    <param  type="token"
			    name="DASLIB_HOME"
			    value="${config.home.daslib}"/>
		    <param  type="token"
			    name="LFC_HOME"
			    value="${config.home.lfc}"/>
		    <param  type="token"
			    name="PANDA_HOME"
			    value="${config.home.panda}"/>
		    <param  type="token"
			    name="MPI_HOME"
			    value="${config.home.mpi}"/>
		</filterreader>
	    </filterchain>
	</copy>

	<replaceregexp
		file="${ibis}/build-properties"
		flags="g"
		match="\${file.separator}"
		replace="/"/>


	<!--
	==============================================================
	    Generate configuration.sh
	-->

	<property environment="env"/>
	<property name="JAVA_HOME_ENV" value="${env.JAVA_HOME}"/>
	<condition property="JIT_OPTS" value="${env.JIT_OPTS}">
	    <isset property="env.JIT_OPTS"/>
	</condition>
	<condition property="JIT_OPTS" value="">
	    <not>
		<isset property="env.JIT_OPTS"/>
	    </not>
	</condition>

	<echo
		file="${ibis}/configuration.sh">#!/bin/bash
# Shell variables to describe Ibis configuration

</echo>
	<echo
		append="true"
		file="${ibis}/configuration.sh">JAVA_ROOT=${JAVA_HOME_ENV}
</echo>
	<echo
		append="true"
		file="${ibis}/configuration.sh">JAVAC=${JAVA_HOME_ENV}/bin/javac
</echo>
	<echo
		append="true"
		file="${ibis}/configuration.sh">JIT_OPTS="${JIT_OPTS}"
</echo>
	<echo
		append="true"
		file="${ibis}/configuration.sh">IBIS_ROOT=${ibis.super}
</echo>
	<echo
		append="true"
		file="${ibis}/configuration.sh">MANTA_ROOT=/usr/local/VU/manta
</echo>
	<echo
		append="true"
		file="${ibis}/configuration.sh">PANDA_ROOT=${config.home.panda}
</echo>
	<echo
		append="true"
		file="${ibis}/configuration.sh">LFC_ROOT=${config.home.lfc}
</echo>
	<echo
		append="true"
		file="${ibis}/configuration.sh">GM_ROOT=${config.home.gm}
</echo>
	<echo
		append="true"
		file="${ibis}/configuration.sh">DAS_LIB=${config.home.daslib}/lib/i386_Linux/libdas.a
</echo>
	<echo
		append="true"
		file="${ibis}/configuration.sh">PANDA_NETWORK=lfc
</echo>
	<echo
		append="true"
		file="${ibis}/configuration.sh">BCEL=${config.home.bcel}
</echo>

	<!-- Concat the stuff in scripts to the bin directory -->
	<mkdir dir="${ibis}/bin"/>

	<concat destfile="${ibis}/bin/ibisc">
	    <filelist dir="${ibis}" files="configuration.sh,scripts/ibisc" />
	</concat>
	<chmod file="${ibis}/bin/ibisc" perm="+x"/>

	<concat destfile="${ibis}/bin/io_gen">
	    <filelist dir="${ibis}" files="configuration.sh,scripts/io_gen" />
	</concat>
	<chmod file="${ibis}/bin/io_gen" perm="+x"/>

	<concat destfile="${ibis}/bin/ibis_nameserver">
	    <filelist dir="${ibis}" files="configuration.sh,scripts/ibis_nameserver" />
	</concat>
	<chmod file="${ibis}/bin/ibis_nameserver" perm="+x"/>

	<concat destfile="${ibis}/bin/jdis">
	    <filelist dir="${ibis}" files="configuration.sh,scripts/jdis" />
	</concat>
	<chmod file="${ibis}/bin/jdis" perm="+x"/>

	<concat destfile="${ibis}/bin/jp">
	    <filelist dir="${ibis}" files="configuration.sh,scripts/jp" />
	</concat>
	<chmod file="${ibis}/bin/jp" perm="+x"/>

	<concat destfile="${ibis}/bin/satinc">
	    <filelist dir="${ibis}" files="configuration.sh,scripts/satinc" />
	</concat>
	<chmod file="${ibis}/bin/satinc" perm="+x"/>

	<concat destfile="${ibis}/bin/run_ibis">
	    <filelist dir="${ibis}" files="configuration.sh,scripts/run_ibis" />
	</concat>
	<chmod file="${ibis}/bin/run_ibis" perm="+x"/>

	<concat destfile="${ibis}/bin/extract_jars">
	    <filelist dir="${ibis}" files="configuration.sh,scripts/extract_jars" />
	</concat>
	<chmod file="${ibis}/bin/extract_jars" perm="+x"/>

	<concat destfile="${ibis}/bin/tree_ioc">
	    <filelist dir="${ibis}" files="configuration.sh,scripts/tree_ioc" />
	</concat>
	<chmod file="${ibis}/bin/tree_ioc" perm="+x"/>

	<concat destfile="${ibis}/bin/run_ibis_wide_area">
	    <filelist dir="${ibis}" files="configuration.sh,scripts/run_ibis_wide_area" />
	</concat>
	<chmod file="${ibis}/bin/run_ibis_wide_area" perm="+x"/>

	<concat destfile="${ibis}/bin/grun">
	    <filelist dir="${ibis}" files="configuration.sh,scripts/grun" />
	</concat>
	<chmod file="${ibis}/bin/grun" perm="+x"/>

	<concat destfile="${ibis}/bin/pprun">
	    <filelist dir="${ibis}" files="configuration.sh,scripts/pprun" />
	</concat>
	<chmod file="${ibis}/bin/pprun" perm="+x"/>

	<concat destfile="${ibis}/bin/frun">
	    <filelist dir="${ibis}" files="configuration.sh,scripts/frun" />
	</concat>
	<chmod file="${ibis}/bin/frun" perm="+x"/>

	<copy
		overwrite="true"
		file="${ibis}/scripts/cluster_wrapper.in"
		tofile="${ibis}/bin/cluster_wrapper">
	    <filterchain>
		<filterreader
			classname="org.apache.tools.ant.filters.ReplaceTokens">
		    <param  type="token"
			    name="IBIS_INSTALL_PATH"
			    value="${ibis.super}"/>
		    <param  type="token"
			    name="JAVA"
			    value="${JAVA_HOME_ENV}"/>
		</filterreader>
	    </filterchain>
	</copy>
	<replaceregexp
		file="${ibis}/bin/cluster_wrapper"
		flags="g"
		match="\${file.separator}"
		replace="/"/>
	<chmod file="${ibis}/bin/cluster_wrapper" perm="+x"/>

	<concat destfile="${ibis}/bin/csim_run_ibis">
	    <filelist dir="${ibis}" files="configuration.sh,scripts/csim_run_ibis" />
	</concat>
	<chmod file="${ibis}/bin/csim_run_ibis" perm="+x"/>

	<concat destfile="${ibis}/bin/csim_run_ibis_tcp">
	    <filelist dir="${ibis}" files="configuration.sh,scripts/csim_run_ibis_tcp" />
	</concat>
	<chmod file="${ibis}/bin/csim_run_ibis_tcp" perm="+x"/>

    </target>

</project>
